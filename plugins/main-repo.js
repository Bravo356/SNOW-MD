const fetch = require('node-fetch');
const config = require('../config');
const { cmd } = require('../command');

cmd({
    pattern: "repo",
    alias: ["sc", "script", "info"],
    desc: "Fetch GitHub repository information",
    react: "üì•",
    category: "info",
    filename: __filename,
},
async (conn, mek, m, { from, reply }) => {
    const githubRepoURL = 'https://github.com/jon-snow-tech-bot/SNOW-MD';

    try {
        const match = githubRepoURL.match(/github\.com\/([^/]+)\/([^/]+)/);
        if (!match) return reply("‚ùå Erreur : L'URL du repo est invalide.");

        const [, username, repoName] = match;

        const response = await fetch(`https://api.github.com/repos/${username}/${repoName}`, {
            headers: {
                'User-Agent': 'JON'
            }
        });

        if (response.status === 503) {
            return reply("‚ùå GitHub est temporairement indisponible (503). R√©essaie plus tard.");
        }

        if (!response.ok) {
            return reply(`‚ùå √âchec de r√©cup√©ration des infos du repo. Code: ${response.status}`);
        }

        const repoData = await response.json();

        const message = `> ‚ï≠‚≠ë‚îÅ‚îÅ‚û§ *SNOW-MD REPO*
> ‚îá‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
> ‚îá‚îÉ‚ô¢ * Ä·¥á·¥ò·¥ès…™·¥õ·¥è Ä è*: ${repoData.name}
> ‚îá‚îÉ‚ô¢ *·¥è·¥°…¥·¥á Ä*: ${repoData.owner.login}
> ‚îá‚îÉ‚ô¢ *s·¥õ·¥Ä Äs*: ${repoData.stargazers_count}
> ‚îá‚îÉ‚ô¢ *“ì·¥è Ä·¥ãs*: ${repoData.forks_count}
> ‚îá‚îÉ‚ô¢ *·¥ú Ä ü*: ${repoData.html_url}
> ‚îá‚îÉ‚ô¢ *·¥Ö·¥ás·¥Ñ Ä…™·¥ò·¥õ…™·¥è…¥*:
> ‚îá‚îÉ${repoData.description || '…¥·¥è ·¥Ö·¥ás·¥Ñ Ä…™·¥ò·¥õ…™·¥è…¥'}
> ‚îá‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îà‚ä∑
> ‚ï∞‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚ïç‚ïØ
> ${config.DESCRIPTION}`;

        await conn.sendMessage(from, {
            image: { url: `https://files.catbox.moe/rmcjwq.jpg` },
            caption: message,
            contextInfo: { 
                mentionedJid: [m.sender],
                forwardingScore: 999,
                isForwarded: true,
                forwardedNewsletterMessageInfo: {
                        newsletterJid: '120363400596152474@newsletter',
                    newsletterName: config.OWNER_NAME || 'SNOW-MD',
                    serverMessageId: 143
                }
            }
        }, { quoted: mek });

    } catch (error) {
        console.error("Repo command error:", error);
        reply("‚ùå Une erreur est survenue lors de la r√©cup√©ration du d√©p√¥t.");
    }
});
              
